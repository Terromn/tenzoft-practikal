---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import About from '../components/About.astro';
import Services from '../components/Services.astro';
import Contact from '../components/Contact.astro';
import Footer from '../components/Footer.astro';
import Background from '../components/Background.astro';
---

<Layout 
  title="Practikal"
  description="Más de 20 años transformando empresas con soluciones tecnológicas innovadoras. Consultoría especializada, equipos multidisciplinarios y soporte integral. Contacta hoy para una consulta gratuita."
>
  <Background />
  
  <!-- Indicador de progreso de scroll -->
  <div class="scroll-progress"></div>
  
  <Header />
  <main>
    <Hero />
    <About />
    <Services />
    <Contact />
  </main>
  <Footer />
</Layout>

<!-- GSAP CDN -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Verificar que GSAP esté disponible
    if (typeof gsap !== 'undefined') {
      gsap.registerPlugin(ScrollTrigger);

      // ==================== BACKGROUND ANIMATIONS ====================
      
      // Animación de partículas de fondo
      gsap.to('.floating-particle', {
        y: -30,
        x: 20,
        rotation: 360,
        duration: 6,
        ease: 'none',
        repeat: -1,
        yoyo: true,
        stagger: 0.8
      });

      // ==================== NUMBERS COUNTER ANIMATION ====================
      
      // Función para animar contadores
      function animateCounter(element: HTMLElement, finalValue: number, suffix: string = '') {
        const obj = { value: 0 };
        
        gsap.to(obj, {
          value: finalValue,
          duration: 2,
          delay: 0.5, // Pequeño delay para que se vea después de la animación de fade in
          ease: 'power2.out',
          onUpdate: function() {
            element.textContent = Math.round(obj.value) + suffix;
          }
        });
      }

      // Aplicar animación de contador a las estadísticas del Hero
      document.querySelectorAll('#inicio .grid .text-2xl, #inicio .grid .text-3xl').forEach((element) => {
        const text = element.textContent;
        
        if (text && text.includes('20+')) {
          animateCounter(element as HTMLElement, 20, '+');
        } else if (text && text.includes('500+')) {
          animateCounter(element as HTMLElement, 500, '+');
        } else if (text && text.includes('98%')) {
          animateCounter(element as HTMLElement, 98, '%');
        }
      });

      // ==================== PARALLAX EFFECTS ====================
      
      // Parallax suave para el hero
      gsap.to('#inicio', {
        y: -50,
        ease: 'none',
        scrollTrigger: {
          trigger: '#inicio',
          start: 'top top',
          end: 'bottom top',
          scrub: 1
        }
      });

      // ==================== INTERACTIVE HOVER EFFECTS ====================
      
      // Efecto hover mejorado para botones
      document.querySelectorAll('a[href^="#"], button').forEach(btn => {
        btn.addEventListener('mouseenter', () => {
          gsap.to(btn, { 
            scale: 1.05, 
            duration: 0.3, 
            ease: 'power2.out' 
          });
        });
        
        btn.addEventListener('mouseleave', () => {
          gsap.to(btn, { 
            scale: 1, 
            duration: 0.3, 
            ease: 'power2.out' 
          });
        });
      });

      // Efecto hover para tarjetas con micro-interacciones
      document.querySelectorAll('.service-card, .value-card, .about-point').forEach(card => {
        card.addEventListener('mouseenter', () => {
          gsap.to(card, { 
            y: -8, 
            scale: 1.02, 
            duration: 0.4, 
            ease: 'power2.out'
          });
          
          // Animación de los iconos dentro de las tarjetas
          const icon = card.querySelector('svg, .w-12, .w-16');
          if (icon) {
            gsap.to(icon, { 
              rotation: 5, 
              scale: 1.1, 
              duration: 0.3, 
              ease: 'power2.out' 
            });
          }
        });
        
        card.addEventListener('mouseleave', () => {
          gsap.to(card, { 
            y: 0, 
            scale: 1, 
            duration: 0.4, 
            ease: 'power2.out'
          });
          
          const icon = card.querySelector('svg, .w-12, .w-16');
          if (icon) {
            gsap.to(icon, { 
              rotation: 0, 
              scale: 1, 
              duration: 0.3, 
              ease: 'power2.out' 
            });
          }
        });
      });

      // ==================== SCROLL PROGRESS INDICATOR ====================
      
      // Indicador de progreso de scroll
      gsap.to('.scroll-progress', {
        scaleX: 1,
        ease: 'none',
        scrollTrigger: {
          trigger: 'body',
          start: 'top top',
          end: 'bottom bottom',
          scrub: 1
        }
      });

      // ==================== SMOOTH REVEAL ANIMATIONS ====================
      
      // Animación de reveal suave para secciones principales
      document.querySelectorAll('main > *').forEach((element) => {
        gsap.fromTo(element, 
          { 
            opacity: 0, 
            y: 60 
          },
          { 
            opacity: 1, 
            y: 0, 
            duration: 1.2, 
            ease: 'power2.out',
            scrollTrigger: {
              trigger: element,
              start: 'top 85%',
              end: 'bottom 15%',
              toggleActions: 'play none none reverse'
            }
          }
        );
      });

      console.log('✨ GSAP animations optimized and loaded successfully!');
    } else {
      console.warn('GSAP not loaded');
    }
  });
</script>

<style>
  main {
    overflow-x: hidden;
  }
  
  /* Indicador de progreso de scroll */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, #1BB4AD, #FF8539);
    transform-origin: left;
    transform: scaleX(0);
    z-index: 1000;
  }
  
  /* Smooth scrolling mejorado */
  html {
    scroll-behavior: smooth;
  }
  
  /* Mejoras visuales para las animaciones */
  section {
    position: relative;
    z-index: 1;
  }
  
  /* Optimización para animaciones */
  * {
    will-change: transform;
  }
</style>
